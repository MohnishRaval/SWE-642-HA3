# The name of the workflow.
name: SWE-642 CI/CD Pipeline

# Run the workflow when code is pushed to the main branch
on:
  push:
    branches:
      - main

# This is the workflow that is being run.
jobs:
  build-and-deploy:
    # This is telling GitHub to run the workflow on the latest version of Ubuntu.
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Build a Docker image for the client application
      - name: Build Client Docker Image
        working-directory: ./frontend
        # Build image with tag using Git commit SHA
        run: |
          docker build -t 19982707/swe642ha3:frontend-${{ github.sha }} .

      # Build a Docker image for the server application
      - name: Build Server Docker Image
        working-directory: ./backend/SWE-645-Assignment-3-main/SWE-645-Assignment-3-main
        # Build image with tag using Git commit SHA
        run: |
          docker build -t 19982707/swe642ha3:backend-${{ github.sha }} .

      # Login to Docker Hub using credentials from repository secrets
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push the Docker images to Docker Hub
      - name: Push Docker Images to Docker Hub
        run: |
          docker push 19982707/swe642ha3:frontend-${{ github.sha }}
          docker push 19982707/swe642ha3:backend-${{ github.sha }}

      - name: SSH into EC2 and pull latest Docker images
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Check if the containers exist before stopping and removing them
            if docker ps -a --format '{{.Names}}' | grep -Eq '^swe642-frontend-container$'; then
                docker stop swe642-frontend-container || true
                docker rm swe642-frontend-container || true
            fi

            if docker ps -a --format '{{.Names}}' | grep -Eq '^swe642-backend-container$'; then
                docker stop swe642-backend-container || true
                docker rm swe642-backend-container || true
            fi

            # Pull the latest Docker images
            docker pull 19982707/swe642ha3:frontend-${{ github.sha }}
            docker pull 19982707/swe642ha3:backend-${{ github.sha }}

            # Run the new containers
            docker run -d --name swe642-frontend-container -p 4200:80 19982707/swe642ha3:frontend-${{ github.sha }}
            docker run -d --name swe642-backend-container -p 8080:8080 19982707/swe642ha3:backend-${{ github.sha }}
